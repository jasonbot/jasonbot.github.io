<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hardware on Jason Scheirer</title>
    <link>https://www.jasonscheirer.com/tags/hardware/</link>
    <description>Recent content in hardware on Jason Scheirer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Aug 2023 01:11:45 -0800</lastBuildDate><atom:link href="https://www.jasonscheirer.com/tags/hardware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2023: Linux on the Desktop This Year</title>
      <link>https://www.jasonscheirer.com/weblog/linux-on-the-desktop-2023/</link>
      <pubDate>Mon, 07 Aug 2023 01:11:45 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/linux-on-the-desktop-2023/</guid>
      <description>&lt;p&gt;I have a Gaming PC I bought from Costco when my wife told me &amp;ldquo;I should maybe get back into my old hobbies&amp;rdquo; in the summer of 2020. It came with Win10, which is fine and it&amp;rsquo;s probably good to have at least one Windows machine in the house at any given time.&lt;/p&gt;
&lt;p&gt;The thing is: Windows is &lt;em&gt;annoying&lt;/em&gt;. Every time Windows ran an update I had to run &lt;a href=&#34;https://www.wagnardsoft.com/display-driver-uninstaller-DDU-&#34;&gt;a third-party uninstall tool&lt;/a&gt; to undo the changes Windows updates made to the graphics drivers, which started hanging and crashing if they weren&amp;rsquo;t the exact specific ones the machine shipped with.&lt;/p&gt;
&lt;p&gt;We had a flood in the winter of 2022. Our new home office was under half an inch of water and many of my electronics were unsalvageably water damaged. I placed this gaming machine (which hardly got any usage anyway) outside to dry.&lt;/p&gt;
&lt;p&gt;The case then accrued condensation inside, which convinced me this thing was now, if it had not been previously, fully water damaged e-waste.&lt;/p&gt;
&lt;p&gt;In April I was bored and wanted to see if I could at least save the hard drives before taking the machine to recycling. On a lark I tried to turn in on and surprise surprise, it booted no problem!&lt;/p&gt;
&lt;p&gt;Since I had already written it off as &amp;ldquo;dead,&amp;rdquo; I figured it was fine to put Linux on it. I had read about &lt;a href=&#34;https://nobaraproject.org/&#34;&gt;Nobara Linux&lt;/a&gt; as it was done by the same guy who does a bunch of Proton and SteamOS hacking, and it had a bunch of quality of life improvements to make it gaming friendly: it even had the Steam client installed out of the box. Once I got over my distaste of using a non-.deb based distro I was off to the races.&lt;/p&gt;
&lt;p&gt;I like the Gnome desktop. This ships with a newer version of it.&lt;/p&gt;
&lt;p&gt;For the whole &amp;ldquo;I need at least one Windows machine in the house&amp;rdquo; thing: Proton plays all my games. Steam on here does 95% of what I need. TYhe only Windows app I &lt;em&gt;really&lt;/em&gt; need is &lt;a href=&#34;https://www.xara.com/photo-graphic-plus/&#34;&gt;Xara&lt;/a&gt;, because I&amp;rsquo;ve been using it or its lineage since 1999 and I have muscle memory. Every attempt I&amp;rsquo;ve made in every flavor of Wine has failed, and even &lt;a href=&#34;http://www.xaraxtreme.org/&#34;&gt;the Linux versions they briefly released&lt;/a&gt; are now too bit-rotted to be usable on a modern installation on an x64 machine.&lt;/p&gt;
&lt;p&gt;So Wine mostly has me covered, but for that single app I&amp;rsquo;m now using &lt;a href=&#34;https://virt-manager.org/&#34;&gt;virt-manager&lt;/a&gt; to handle a single &lt;a href=&#34;https://archive.org/details/tiny-10-NTDEV&#34;&gt;Tiny10&lt;/a&gt; install, which is a custom &amp;ldquo;remix&amp;rdquo; of Windows that is so bare bones that it&amp;rsquo;s not even possible to install the &lt;a href=&#34;https://github.com/microsoft/terminal&#34;&gt;new Windows terminal&lt;/a&gt; on. But it&amp;rsquo;s got a very small footprint and it runs my programs and is &lt;em&gt;probably&lt;/em&gt; a better idea than an Win7 or XP VM.&lt;/p&gt;
&lt;p&gt;So Nobara has been fine for the past several months. I have &lt;a href=&#34;https://code.visualstudio.com/docs/setup/linux#_rhel-fedora-and-centos-based-distributions&#34;&gt;VS Code as an RPM source&lt;/a&gt;, I just download Go as &lt;code&gt;.tar.gz&lt;/code&gt; and plop it into &lt;code&gt;~&lt;/code&gt;, Python via &lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;PyEnv&lt;/a&gt;, and then &lt;a href=&#34;https://cloud.google.com/sdk/docs/install&#34;&gt;google cloud command line apps&lt;/a&gt;. Additionally, &lt;a href=&#34;https://flathub.org/en&#34;&gt;Flatpak&lt;/a&gt; has turned out to be this amazing dark horse over the past 3 years to find decent software in a distro-independent fashion. The only annoyance remaining is that there&amp;rsquo;s the occasional double-buffering-flicker thing that pops up on 3d accelerated UI apps.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hardware review: Anbernic RG35XX</title>
      <link>https://www.jasonscheirer.com/weblog/rg35xx/</link>
      <pubDate>Fri, 02 Jun 2023 08:00:00 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/rg35xx/</guid>
      <description>&lt;p&gt;Wanting a small, pocketable handheld for bus rides, etc., I saw the &lt;a href=&#34;https://www.keepretro.com/products/miyoo-mini&#34;&gt;Miyoo Mini&lt;/a&gt; and attempted to purchase one. They are &lt;em&gt;incredibly&lt;/em&gt; hard to acquire.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://anbernic.com/products/rg35xx&#34;&gt;Anbernic RG35XX&lt;/a&gt; presented itself as an alternative, and it was actually possible to buy one.&lt;/p&gt;
&lt;p&gt;I got one for about $60 on Amazon and was immediately in love. It had a decent built in game library, decent battery life, and was the perfect size. Not too big, not to small. Fits in a pants pocket or a little random orner of a carrying bag no problem.&lt;/p&gt;
&lt;p&gt;The stock SD card and OS is servicable, but I replaced it with my own SD card with my own legally acquired ROM library. I use &lt;a href=&#34;https://www.patreon.com/posts/garlicos-for-76561333&#34;&gt;GarlicOS&lt;/a&gt; and I&amp;rsquo;m quite happy with it. At one point &lt;a href=&#34;https://github.com/jasonbot/platinum-garlic&#34;&gt;I even made a skin for it&lt;/a&gt;. I normally play Neo-Geo, PSX, and GBA games. The best part about emulation is that all those quarter munchers become way more playable when you just have to hit select to insert a quarter. On an average Metal Slug run (any sequel) it would have cost me close to $20 based on how many times I get game overs.&lt;/p&gt;
&lt;p&gt;I like it so much that I bought my 5 year old one and put &lt;a href=&#34;https://github.com/shauninman/union-minui&#34;&gt;MinUI&lt;/a&gt; on it. Aside from being largely text-based which isn&amp;rsquo;t great for a 5 year old, it&amp;rsquo;s super usable and its no-frills approach makes it ideal for people who just want to play games.&lt;/p&gt;
&lt;p&gt;My only concern is that the only firmware that runs Dreamcast is &lt;a href=&#34;https://rg35xx-cfw.github.io/&#34;&gt;Batocera&lt;/a&gt;, which I am not particularly inclined to use as a daily driver.&lt;/p&gt;
&lt;p&gt;Honestly, I play this more than my Steam Deck. I take it with me all the time since it&amp;rsquo;s so small. Waiting rooms, the bus, it&amp;rsquo;s a great little thing to pull out when you have a few seconds to spare.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hardware review: Devterm</title>
      <link>https://www.jasonscheirer.com/weblog/devterm/</link>
      <pubDate>Thu, 16 Mar 2023 08:00:00 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/devterm/</guid>
      <description>&lt;p&gt;I bought a &lt;a href=&#34;https://www.clockworkpi.com/devterm&#34;&gt;Devterm&lt;/a&gt; a couple of years ago and it&amp;rsquo;s mostly been sitting in a drawer.&lt;/p&gt;
&lt;h2 id=&#34;the-good&#34;&gt;The good&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The thermal printer is novel&lt;/li&gt;
&lt;li&gt;The form factor makes it super portable&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-bad&#34;&gt;The bad&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OS support is not great, at one point I built my own Raspbian image because the official one had drifted so far out of date that the apt repos stopped working&lt;/li&gt;
&lt;li&gt;The keyboard and trackball (even with flashed firmware) are painful to use&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hardware review: 1st Gen SteamDeck (512MB)</title>
      <link>https://www.jasonscheirer.com/weblog/steamdeck/</link>
      <pubDate>Wed, 08 Feb 2023 08:00:00 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/steamdeck/</guid>
      <description>&lt;p&gt;I bought a &lt;a href=&#34;https://www.steamdeck.com/en/&#34;&gt;Steam Deck&lt;/a&gt;. I was on a waiting list that said I would get it until this year (2023), but it arrived in October 2022.&lt;/p&gt;
&lt;p&gt;This thing is so versatile thanks to its Desktop Mode. For games like the boomer shooters I so love, I can dock the Deck and play with a mouse and keyboard and nicer monitor. I can install Flatpaks.&lt;/p&gt;
&lt;p&gt;The gaming experience is bar none the best. Steam OS is an accomplishment. It has none of the fiddly bits around power management etc that a standard Linux machine does. It&amp;rsquo;s a usable, console-quality experience.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hardware review: AOKZOE A1</title>
      <link>https://www.jasonscheirer.com/weblog/aokzoe-a1/</link>
      <pubDate>Sun, 01 Jan 2023 08:00:00 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/aokzoe-a1/</guid>
      <description>&lt;p&gt;I kickstarted the &lt;a href=&#34;https://aokzoestore.com/products/aokzoe-8-inch-amd%C2%AE-ryzen%C2%AE-6800u&#34;&gt;AOKZOE A1&lt;/a&gt; when I was utterly convince that I would never get a Steam Deck.&lt;/p&gt;
&lt;p&gt;Joke&amp;rsquo;s on me; the Deck arrived before the A1.&lt;/p&gt;
&lt;p&gt;I primarily use this system as my sole Win11 machine, so it does a lot of light desktop work. It is also my &amp;ldquo;travel&amp;rdquo; laptop; when I&amp;rsquo;m travelling I take this and not my Steam Deck. Everything is tunable, but it draws way more power than a Deck and generally lasts about the same amount of time even with the larger battery.&lt;/p&gt;
&lt;p&gt;The bundled OS is pretty close to stock Win11 and contains very little bloat. The A1 sidebar app that shows up when you press the turbo button is servicable, and themable. I went from the obnoxious gamer green UI to something more muted and transparent.&lt;/p&gt;
&lt;p&gt;One annoying thing about the &amp;ldquo;community&amp;rdquo; is you have to join thew AOKZOE Discord to find out the latest software updates, etc. Since AOKZOE is primarily a Chinese company, and a young one at that, much of the injformation about the device is locked away in Chinese-language web sites and you need the Discord to find and filter out the important parts.&lt;/p&gt;
&lt;p&gt;I cannot say enough good things about the display. Blows the Deck out of the water.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TL;DR&lt;/em&gt;: The hardware is amazing, the support not so much. The screen and the gaming power are the big draws.&lt;/p&gt;
&lt;p&gt;The A1 has been supplanted by the A1 Pro at this point, so you should be able to find A1s much cheaper now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hardware review: iPhone 13 Mini</title>
      <link>https://www.jasonscheirer.com/weblog/iphone-13-mini/</link>
      <pubDate>Thu, 29 Dec 2022 08:00:00 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/iphone-13-mini/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m not going into specs or specific details on this device. I was on an iPhone XS, which has slowly been degrading over time. Battery was slowly dying, replaced it at the Apple Store, the ribbon cable for the display was not adequately clipped back into place. It was easier to just order a new phone than to take the bus up to Emeryville again in the middle of the day for an appointment.&lt;/p&gt;
&lt;p&gt;I am very happy with this piece of hardware. I held onto my iPhone 4 then original iPhone SE because I liked the form factor. Got the XS when it came out because my phone was dead and it was the smallest one on the market at the time.&lt;/p&gt;
&lt;p&gt;With smaller devices there is a smaller battery: my Kid&amp;rsquo;s iPad runs a week on a charge. This runs a day.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s an iPhone. It&amp;rsquo;s small. It takes good pictures. It runs iOS. The migration story from an older phone is simple &amp;ndash; the only two apps that took extra attention were Google Auth and Duo. Since I migrated from backup, most other accounts/devices carried over without issue.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ZPL-O-Rama Part 5: Postscript</title>
      <link>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-5/</link>
      <pubDate>Mon, 08 Mar 2021 05:00:00 +0000</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-5/</guid>
      <description>&lt;h1 id=&#34;end-product&#34;&gt;End product&lt;/h1&gt;
&lt;p&gt;Please disregard the poor camera placement or the labels, it has since been fixed.&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://www.jasonscheirer.com/images/zpl-o-rama/workflow-1.png&#34; alt=&#34;Step 1&#34; /&gt;
&lt;/figure&gt;




&lt;figure&gt;
  &lt;img src=&#34;https://www.jasonscheirer.com/images/zpl-o-rama/workflow-2.png&#34; alt=&#34;Step 2&#34; /&gt;
&lt;/figure&gt;




&lt;figure&gt;
  &lt;img src=&#34;https://www.jasonscheirer.com/images/zpl-o-rama/workflow-3.png&#34; alt=&#34;Step 3&#34; /&gt;
&lt;/figure&gt;


&lt;/p&gt;
&lt;h1 id=&#34;thinking-back-it-was-all-so-simple&#34;&gt;Thinking Back, It Was All So Simple&lt;/h1&gt;
&lt;p&gt;Now we have the system up and running, let&amp;rsquo;s talk random obstacles and next steps. This is something of an epilogue to the saga, as it&amp;rsquo;s a list of small things that accrued while working on the project.&lt;/p&gt;
&lt;h2 id=&#34;networks-are-slow-and-the-dual-tier-service-thing-is-bad-actually&#34;&gt;Networks are slow and the dual tier service thing is bad, actually&lt;/h2&gt;
&lt;p&gt;I initially chose to run a service on the Nginx server that then called to a service running on the RPi. Since there were Very Large PNGs being shuttled around a LOT, this was inefficient from a speed perspective because of the bandwidth consumed over my shitty cable connection.&lt;/p&gt;
&lt;p&gt;Two band-aids I&amp;rsquo;ve applied:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Moved both services to the RPi&lt;/li&gt;
&lt;li&gt;Started sending out a version of the image by default shrunken to 800px wide, with the original full size image as an optional download.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I could merge the two services into one, but having the backend be &lt;code&gt;curl&lt;/code&gt;able without any sort of auth makes it easy to test the two ends more effectively.&lt;/p&gt;
&lt;h2 id=&#34;networks-are-unreliable&#34;&gt;Networks are unreliable&lt;/h2&gt;
&lt;p&gt;The SSH tunnel can go down and while I have taken efforts to mitigate it, I could take more. Currently:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Setting timeouts in the SSH tunnel service&lt;/li&gt;
&lt;li&gt;Force resetting the tunnel every 6 hours&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Additionally I could:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run another task that tries to hit a healthcheck on the zpl service, and if it&amp;rsquo;s dead restart the tunnel service unit&lt;/li&gt;
&lt;li&gt;The same idea but with my cable internet connection&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;life-is-a-sequence-of-disappointments-and-confusion-until-it-usually-ends-anticlimactically-in-a-whimper&#34;&gt;Life is a sequence of disappointments and confusion until it (usually) ends anticlimactically in a whimper&lt;/h2&gt;
&lt;p&gt;Just gotta do what you can do a day at a time, man.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ZPL-O-Rama Part 4: The Hardware</title>
      <link>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-4/</link>
      <pubDate>Mon, 08 Mar 2021 04:00:00 +0000</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-4/</guid>
      <description>&lt;h1 id=&#34;hardware&#34;&gt;Hardware&lt;/h1&gt;
&lt;h2 id=&#34;the-rpi&#34;&gt;The RPi&lt;/h2&gt;
&lt;p&gt;The Raspberry Pi is a (I think) Pi 3 with Wifi I found in the garage with a cheap clear acrylic case. It might have been a RetroPie rig in a prior life? Or one I was &amp;ldquo;gonna get around to&amp;rdquo; doing something with and finally did?&lt;/p&gt;
&lt;p&gt;Then for this project I bought a Raspberry Pi camera and a small acrylic case for it, too.&lt;/p&gt;
&lt;h2 id=&#34;the-printer&#34;&gt;The Printer&lt;/h2&gt;
&lt;p&gt;The printer is a hefty boi, a Zebra something or other. It belongs to work. It has an ethernet port, a lot of lights, an air of proprietary grandeur, and a hunger for paper and electricity.&lt;/p&gt;
&lt;h2 id=&#34;the-assembled-rig&#34;&gt;THE ASSEMBLED RIG&lt;/h2&gt;
&lt;p&gt;I wanted all the components to be as easy to transport as possible, so I used adhesive velcro tape to affix the components to each other and some adhesive cable maangement clips to hold the cables in place, carefult to leave enough slack so that the side dfoor can still open.&lt;/p&gt;
&lt;p&gt;The Pi is running stock Raspian, I have the Pi connected to the printer via a short span of Cat 6 I found, and I&amp;rsquo;m using dnsmasq&amp;rsquo;s dhcp bound to &lt;code&gt;eth0&lt;/code&gt; so that the printer always gets the same IP that the Pi can address it through. The Pi joins my network via WiFi. The intent is for the whole mess to be easy to pick up and move around the house.&lt;/p&gt;
&lt;p&gt;The last piece is a humble power strip.&lt;/p&gt;
&lt;p&gt;A picture of the front (you can see some of the cable management):

&lt;figure&gt;
  &lt;img src=&#34;https://www.jasonscheirer.com/images/zpl-o-rama/rig-picture.png&#34; alt=&#34;Hardware Rig Picture&#34; /&gt;
&lt;/figure&gt;


&lt;/p&gt;
&lt;p&gt;How it&amp;rsquo;s set up:

&lt;figure&gt;
  &lt;img src=&#34;https://www.jasonscheirer.com/images/zpl-o-rama/rig-diagram.svg&#34; alt=&#34;Hardware Rig Diagram&#34; /&gt;
&lt;/figure&gt;


&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jasonscheirer.com/weblog/zpl-o-rama-part-5&#34;&gt;On to part 5 →&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ZPL-O-Rama Part 2: Concepts and Architecture</title>
      <link>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-2/</link>
      <pubDate>Mon, 08 Mar 2021 02:00:00 +0000</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-2/</guid>
      <description>&lt;h1 id=&#34;problem-space&#34;&gt;Problem Space&lt;/h1&gt;
&lt;p&gt;To automate the process of printing and reporting back a ZPL payload, we need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A way to get the ZPL from the user&lt;/li&gt;
&lt;li&gt;A way to send the ZPL to a printer&lt;/li&gt;
&lt;li&gt;A way to take a picture&lt;/li&gt;
&lt;li&gt;A way to send it back to the user&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;a-way-to-get-the-zpl-from-the-user&#34;&gt;A way to get the ZPL from the user&lt;/h2&gt;
&lt;p&gt;A web service makes sense here. We want an API or a frontend (or both) to send the ZPL along and check its printing status.&lt;/p&gt;
&lt;h2 id=&#34;a-way-to-send-the-zpl-to-a-printer&#34;&gt;A way to send the ZPL to a printer&lt;/h2&gt;
&lt;p&gt;A ZPL printer has an ethernet port and can simply be &lt;code&gt;netcat&lt;/code&gt;ted to. We just need a program that shuttles ZPL from user to printer. This can easily be done with a web API and maybe something like a Raspberry pi in between.&lt;/p&gt;
&lt;h2 id=&#34;a-way-to-take-a-picture&#34;&gt;A way to take a picture&lt;/h2&gt;
&lt;p&gt;Raspberry Pis have &lt;a href=&#34;https://www.raspberrypi.org/products/camera-module-v2/&#34;&gt;cheap camra modules&lt;/a&gt; with dedicated ports to accept them on the board. There is &lt;a href=&#34;https://www.raspberrypi.org/documentation/usage/camera/raspicam/raspistill.md&#34;&gt;a simple command-line app&lt;/a&gt; to capture stills. This is easy.&lt;/p&gt;
&lt;h2 id=&#34;a-way-to-send-it-back-to-the-user&#34;&gt;A way to send it back to the user&lt;/h2&gt;
&lt;p&gt;This is probably going to be the same thing as above, with the webapp. The printer prints, the camera cams, the webapp reconveys the image to the user.&lt;/p&gt;
&lt;h1 id=&#34;moving-on&#34;&gt;Moving on&lt;/h1&gt;
&lt;p&gt;Moving forward, we abstractly have all the conceptual parts we&amp;rsquo;ll need to make this service thought out. Now for the details.&lt;/p&gt;
&lt;h1 id=&#34;lets-talk-architecture&#34;&gt;Let&amp;rsquo;s Talk Architecture&lt;/h1&gt;
&lt;p&gt;The next thing I needed to do was plan out how this would work. I made a diagram to make sure I wasn&amp;rsquo;t missing anything.&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://www.jasonscheirer.com/images/zpl-o-rama/zpl-o-rama-architecture.svg&#34; alt=&#34;Architecture Diagram&#34; /&gt;
&lt;/figure&gt;


&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll use Nginx at the edge to route to a frontend application. Then I&amp;rsquo;ll forward to a backend application which is running on my Raspberry pi which handles the printing/photography step.&lt;/p&gt;
&lt;p&gt;Then, I&amp;rsquo;ll present the user a nice web service hosted on a machine on the cloud with a Real Internet IP where the user can log in, enter ZPL, and see the output.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jasonscheirer.com/weblog/zpl-o-rama-part-3&#34;&gt;On to part 3 →&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ZPL-O-Rama Part 1: A personal/work project (Introduction)</title>
      <link>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-1/</link>
      <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/zpl-o-rama-part-1/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;In my spare time on weekends in between errands and mornings before everyone wakes up, I&amp;rsquo;ve been working on a little project I&amp;rsquo;ve been having a lot of fun with: ZPL-O-Rama.&lt;/p&gt;
&lt;h1 id=&#34;the-problem&#34;&gt;The Problem&lt;/h1&gt;
&lt;p&gt;A large part of my employer&amp;rsquo;s line of business is creating shipping labels, and a large number of those aren&amp;rsquo;t simply printed images, but printed on very high volume, heavy duty, industrial grade printers using &lt;a href=&#34;https://www.zebra.com/content/dam/zebra/manuals/printers/common/programming/zpl-zbi2-pm-en.pdf&#34;&gt;a proprietary language called ZPL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In an aggressive and justified act of Intellectual Property enforcement, there are no legal software ZPL renderers available&lt;sup&gt;(footnote 1)&lt;/sup&gt;. This means that to test the output of a ZPL stanza we have to physically print a label and inspect it. In the Before Times of 2019, our office was full of all kinds of ZPL printer we could freely and cavalierly print to.&lt;/p&gt;
&lt;p&gt;Now that workplaces are in a &lt;a href=&#34;https://www.jasonscheirer.com/weblog/thepost-office-world&#34;&gt;post-office diaspora&lt;/a&gt;, we no longer have access to ZPL printers. The fleet of printers were  dispatched to a number of people in the org who opted in and had a vested need to test ZPL. I was one of those people.&lt;/p&gt;
&lt;p&gt;Now, for those without a printer, if they need to test something they will go into a Slack channel and hope someone sees it in a timely manner, prints the ZPL, takes a picture, and reports back.&lt;/p&gt;
&lt;p&gt;We can do better than that. We can automate this.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jasonscheirer.com/weblog/zpl-o-rama-part-2&#34;&gt;On to part 2 →&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Footnotes&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; (Yes, I am aware of &lt;a href=&#34;http://labelary.com/viewer.html&#34;&gt;Labelary&lt;/a&gt;, but that&amp;rsquo;s also proprietary and probably in violation of all kinds of agreements)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Shanling Q1 Media Player</title>
      <link>https://www.jasonscheirer.com/weblog/shanling-q1/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/shanling-q1/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;A while ago I was bored with the Mechanical Keyboard rabbit hole and started looking into other, equally strange rabbit holes to dive into. At around the same time I hit my iPod Classic&amp;rsquo;s 160GB limit. I&amp;rsquo;m not yet ready to hack it up to have bigger storage: I plan to keep it in working &amp;ldquo;original&amp;rdquo; condition as it may find a better home in the future with some collector who is better at soldering than I.&lt;/p&gt;
&lt;p&gt;So I started looking around at the current landscape of stand-alone MP3 players in 2019 and that was a fun few weeks of nerd obsession.&lt;/p&gt;
&lt;p&gt;I loved my iPod back before it was &amp;lsquo;Classic&amp;rsquo; because it Just Worked, didn&amp;rsquo;t need a network connection, and could hold my entire music library. I started commuting on BART again and I&amp;rsquo;m underground a lot, so anything that needs a network connection is right out. I also wanted my full library at my fingertips. And usably so.&lt;/p&gt;
&lt;p&gt;I did think about getting a hacked iPod Classic with a TF slot or a terabyte sdd or maybe get all &lt;a href=&#34;https://www.theverge.com/22238668/microsoft-zune-fans-mp3-music-player-subreddit&#34;&gt;ahistoric and pretend I ever liked the Zune before its unfortunate demise&lt;/a&gt; and get one of those hacked up with modern storage instead but that kind of spending gets me yelled at come Credit Card Balance Day.&lt;/p&gt;
&lt;p&gt;I Kickstarted &lt;a href=&#34;https://www.kickstarter.com/projects/shanlingaudio/shanling-q1-retro-styled-portable-hi-fi-music-player&#34;&gt;the Shanling Q1&lt;/a&gt;, which cost me $89 at the time (now it retails for anywhere from $100-150, so yay me I guess). I picked it because it looked reasonable, was powered by a TF Card, and was cheap enough that it could fly under the radar on our credit card statement.&lt;/p&gt;
&lt;p&gt;It advertises:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A premium DAC for audiophiles&lt;/li&gt;
&lt;li&gt;A 3.5&amp;quot; touch screen&lt;/li&gt;
&lt;li&gt;A TF card port&lt;/li&gt;
&lt;li&gt;Disk mode (your TF card shows up as a passthrough mass storage device)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Retro styling&amp;rdquo; (rounded corners)&lt;/li&gt;
&lt;li&gt;Bluetooth (so you can play your music from ) &amp;ndash; &lt;em&gt;I did not know this worked well, or I would have just paired my work laptop to the Q1 and played all audio through it. Whoops&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I left the player at my office desk when the world ended last March, and didn&amp;rsquo;t pick it up and bring it home until November, but then it just got thrown in a bag with the rest of the contents of my drawers and then unceremoniously stored in a box in my garage.&lt;/p&gt;
&lt;h1 id=&#34;my-music-library&#34;&gt;My Music Library&lt;/h1&gt;
&lt;p&gt;I still organize my Music library in Apple Music, which seems to be the only thing that can sensibly handle large volumes of audio files in a usable manner. I still buy digital albums outright (I no longer have a working optical drive in my household) and either download or convert them to open formats (MP3 or FLAC). Bandcamp and Amazon Music are my primary sources for purchase.&lt;/p&gt;
&lt;p&gt;I do backups via rsync to a &lt;a href=&#34;https://volumio.org/&#34;&gt;Volumio&lt;/a&gt; instance in another room, which I use more as an Airdrop/DLNA audio sink as it&amp;rsquo;s connected to speakers. I didn&amp;rsquo;t really ever play music directly &lt;em&gt;from&lt;/em&gt; it, but if I ever wanted to, oh boy could I.&lt;/p&gt;
&lt;p&gt;For &amp;ldquo;off site&amp;rdquo; backup I rsync to another TF card which I used to take to work.&lt;/p&gt;
&lt;h1 id=&#34;using-it-at-first&#34;&gt;Using It At First&lt;/h1&gt;
&lt;p&gt;I initially would pop my &amp;ldquo;off site&amp;rdquo; TF card into the player when I got into the office, but I found the ergonomics of dealing with a separate device that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;did not play computer audio along with it&lt;/li&gt;
&lt;li&gt;had a relatively onerous UI compared to apple music and&lt;/li&gt;
&lt;li&gt;did not fully scan my library&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;was too troublesome so I eventually just started mounting the TF card on my work laptop at work (plugged into my USB-C desktop hub). I would then drag the mount onto Apple Music on my work laptop to add the files to the library, being careful to make sure Consolidate Library was turned off so it would leave the files in place. I would do this manually every so often; my cadence was about once a month.&lt;/p&gt;
&lt;p&gt;This process was annoying enough that I didn&amp;rsquo;t do it much, it wasn&amp;rsquo;t super appropriate for work. So it went into the desk drawer.&lt;/p&gt;
&lt;h1 id=&#34;an-update-makes-it-more-useful&#34;&gt;An Update Makes it More Useful&lt;/h1&gt;
&lt;p&gt;I found the player a month or two ago and brought it inside, and my kid used it as a toy pretend phone in his room. At some point when he was at home when me and my wife were working, I realized he lived in the living room most of the day, 3 feet away from my wife&amp;rsquo;s desk. This was because the TV was there, and toddler screams and YouTube don&amp;rsquo;t gel well with conference calls.&lt;/p&gt;
&lt;p&gt;I first set up the Chromebook with YouTube in his room, and saw the Q1, and thought that would be a nice little thing to put Baby Shark and junk on for him for when he could read. I put the thing on the charger overnight and turned it back on. It has been a full year and a half since I acquired the thing, so I went to see if there were any firmware updates. &lt;a href=&#34;http://en.shanling.com/download/68&#34;&gt;I found there were on the official page&lt;/a&gt;, but that web site was in concerningly rapid decay and I was afraid I would never be able to get the thing up to current. Thankfully, Google indexed a Facebook thread that linked to &lt;a href=&#34;http://en.shanling.com/article-Q1-V20.html&#34;&gt;another post on their site&lt;/a&gt; that offered a Google Drive download of the firmware, so I was back in business.&lt;/p&gt;
&lt;p&gt;The update offered a bunch of really neat functionality, some of which were improvements over capabilities I never knew it previously had:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WiFi (it has a wifi card?)&lt;/li&gt;
&lt;li&gt;Airplay/DLNA playback (I can use it as a network audio sink, so I can theoretically replace the Volumio with this on one set of speakers)&lt;/li&gt;
&lt;li&gt;WiFi File Transfer (I haven&amp;rsquo;t figured this out)&lt;/li&gt;
&lt;li&gt;Other things I don&amp;rsquo;t care about&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Upgrading happened fine on the first try and surprisingly and didn&amp;rsquo;t brick it. And:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Loading my library worked fully now&lt;/li&gt;
&lt;li&gt;My iPhone easily paired to the device via Bluetooth as an audio sink, which drove me nuts because I was unaware of this prior&lt;/li&gt;
&lt;li&gt;It showed up as an Airplay target on my laptop after joining WiFi, which was also infuriating because it made this device &lt;em&gt;so damn much more useful&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;18-months-later-this-is-good&#34;&gt;18 Months Later, This is Good&lt;/h1&gt;
&lt;p&gt;So this piece of hardware I bought more-or-less on impulse to sate my desire for a standalone MP3 player that worked at least as well as an iPod Classic is finally at the point where it is fulfilling that desire.&lt;/p&gt;
&lt;p&gt;This device works as my wandering &amp;ldquo;off site&amp;rdquo; backup now as it still shows up as &lt;code&gt;/Media/Music&lt;/code&gt; on my Mac so my rsync script just works, so it&amp;rsquo;s the living TF adapter/music player for one of my backups.&lt;/p&gt;
&lt;p&gt;Anyway, they&amp;rsquo;re expensive now and I don&amp;rsquo;t know if I $125 love the thing, but it&amp;rsquo;s a nice piece of compact hardware to put on the pile.&lt;/p&gt;
&lt;p&gt;And I&amp;rsquo;d recommend nerds check out check out the standalone MP3 player market. They still exist, they have nice, incremental improvements over older players, and are mainly targets to audiophiles which forces them to include features and a build quality that are above what you&amp;rsquo;d see in commodity consumer level players, were that still a market.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pinebook Pro: The Tinkering Laptop</title>
      <link>https://www.jasonscheirer.com/weblog/pinebook-pro-the-tinkering-laptop/</link>
      <pubDate>Tue, 19 Jan 2021 12:11:45 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/pinebook-pro-the-tinkering-laptop/</guid>
      <description>&lt;p&gt;As the parent of an almost three year old, I don&amp;rsquo;t get much time to myself, and I&amp;rsquo;ve given up on video games that don&amp;rsquo;t have playtimes under 15 minutes (that discounts anything with load times or cutscenes). In my spare time I have to find other things to do that are low impact and can be cut into small amounts of time.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve taken to watching a lot of retrocomputing stuff on YouTube, which has inspired me to tinker with old software and resource constrained devices. I&amp;rsquo;ve developed a newly renewed interest in hardware/software and gone fully into writing stuff like Lua and Rust on small ARM devices like RPis and &lt;a href=&#34;https://www.pine64.org/devices/single-board-computers/pine-a64/&#34;&gt;Pine64&lt;/a&gt;s.&lt;/p&gt;
&lt;p&gt;I wrote before that I was going to buy a &lt;a href=&#34;https://www.pine64.org/pinebook-pro/&#34;&gt;Pinebook Pro&lt;/a&gt;, and it arrived sometime last May. It came bundled with a flavor of Debian, but they started shipping with a blessed version of Manjaro in August or so. I wasn&amp;rsquo;t happy with that decision because I am so familiar with the Debian ecosystem, but it was the official way to get proper GPU drivers for the hardware.&lt;/p&gt;
&lt;p&gt;As common as the Arm64 architecture is in the world, it&amp;rsquo;s mostly on mobile devices and not traditional &amp;ldquo;computing environments&amp;rdquo; like laptops and desktops. &lt;a href=&#34;https://code.visualstudio.com/updates/v1_46&#34;&gt;Microsoft Visual Studio Code&lt;/a&gt;, for example, didn&amp;rsquo;t have official Arm64 builds available until August of 2020.&lt;/p&gt;
&lt;p&gt;First off is I&amp;rsquo;ve gotten back into game programming for my own amusement using &lt;a href=&#34;https://love2d.org/&#34;&gt;LÖVE&lt;/a&gt;, which was just in Manjaro repos. I added Flatpak, Snap, and AUR support, but vanishingly few of those options have Arm64 builds, leaving me to revisit my times as a build/release engineer and build things from scratch.&lt;/p&gt;
&lt;p&gt;Then, hey, why not Minecraft? These machines are still more powerful than the System76 laptop I owned over 10 years ago that I played the beta on. I found &lt;a href=&#34;https://nicholasbering.ca/raspberry-pi/2020/10/18/minecraft-64bit-rpi4/&#34;&gt;a blog post&lt;/a&gt; on getting it running (the two complications are getting lwjgl to build on the architecture and sidestep the fact that the latest versions of Minecraft use a native client to launch their platform-agnostic code). Building MultiMC following those directions worked fine, but Minecraft takes roughly 30 minutes to start and requires me to set the chunk render distance way down, so while it works in theory, it&amp;rsquo;s unplayable in practice.&lt;/p&gt;
&lt;p&gt;Then I thought I wanted to learn i3 to deal with the slowness of the Pinebook and make it more useful, and wound up choosing &lt;a href=&#34;https://swaywm.org/&#34;&gt;Sway&lt;/a&gt; and &lt;a href=&#34;https://github.com/Alexays/Waybar&#34;&gt;Waybar&lt;/a&gt;. I almost got it usable but I had the option of 1) spending months redeveloping muscle memory or 2) customizing it so far into oblivion that I am the only human on earth who understands my idiomatic setup.&lt;/p&gt;
&lt;p&gt;The usability of this environment was bad, and it mde me want something more traditional. I started getting weird and dark. I wanted to feel some nostalgia so I started building old desktop stuff. Like &lt;a href=&#34;https://www.lysator.liu.se/~marcus/amiwm.html&#34;&gt;AmiWM&lt;/a&gt; and &lt;a href=&#34;https://www.windowmaker.org/&#34;&gt;Windowmaker&lt;/a&gt; which led to me going ahead and build &lt;a href=&#34;http://www.gnustep.org/&#34;&gt;the entire GNUStep stack&lt;/a&gt; from scratch.&lt;/p&gt;
&lt;p&gt;So I&amp;rsquo;ve been spending a lot of time on a highly resource contrained device building source from scratch and fighting with dotfiles. Years ago I would abhor this stage of getting stuff up and running, but nowadays it has an almost meditative, calming quality to it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Dingus Chromebook still works</title>
      <link>https://www.jasonscheirer.com/weblog/chromebook-still-works/</link>
      <pubDate>Mon, 10 Feb 2020 01:11:45 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/chromebook-still-works/</guid>
      <description>&lt;p&gt;So I &lt;a href=&#34;https://www.jasonscheirer.com/weblog/make-a-chromebook-a-developer-machine/&#34;&gt;bought that dang Chromebook&lt;/a&gt; over three years ago at this point and it keeps chugging on. Google has continued to ship OS updates (which I only notice as weird, arbitrary UI changes) and I can still use it to code but its main purpose now is its new life: ChromeOS runs Android apps pretty well, so I put an SD card full of movies on it and play them via VLC for my kid.&lt;/p&gt;
&lt;p&gt;All in all, the Chromebook was a good purchase, it has served many purposes, and it&amp;rsquo;s lasted a lot longer than a lot of other laptops I&amp;rsquo;ve owned (Surface Pro, looking at you).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve got a Pinebook Pro on the way, here&amp;rsquo;s hoping that lasts as long (and is as useful).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Own Your Infrastructure</title>
      <link>https://www.jasonscheirer.com/weblog/own-your-infrastructure/</link>
      <pubDate>Tue, 04 Feb 2020 16:45:45 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/own-your-infrastructure/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been sharecropping on Amazon&amp;rsquo;s server farms since I moved to the Bay Area 5 years ago. That is, every startup I&amp;rsquo;ve worked for has utilized AWS (and sometimes GCP or Azure in addition).&lt;/p&gt;
&lt;p&gt;This started out great for my career because I have not built a server machine from parts out since I was in college and I could use all my developer muscles to be operations person.&lt;/p&gt;
&lt;p&gt;However, when you&amp;rsquo;re on-call, you no longer own your uptime. Amazon will randomly flip bits. Its hosted services will go down without warning and leave you helpless but to wait &amp;ndash; you&amp;rsquo;re down until Amazon Hosted Whatever Thing decides to go back up (and the status page will lie about it being up).&lt;/p&gt;
&lt;p&gt;Now I&amp;rsquo;m at a new place where the systems team (I am back in plain old Software Engineering, hopefully out of DevOps forever) actually runs data centers. Everything is done in VMs and not containers. And it&amp;rsquo;s so refreshing. Not only can we be 100% responsible for fixing downtime, but it provides a much stabler and less abstract system to build software on top of. When the solution to a problem is &amp;ldquo;this Bash script&amp;rdquo; and not &amp;ldquo;this Byzantine pipeline only one guy understands&amp;rdquo; it makes the infrastructure easier to reason about and less prone to failure.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Turn a Chromebook into the ULTIMATE GOLANG/PYTHON DEVELOPER MACHINE</title>
      <link>https://www.jasonscheirer.com/weblog/make-a-chromebook-a-developer-machine/</link>
      <pubDate>Mon, 26 Dec 2016 01:11:45 -0800</pubDate>
      
      <guid>https://www.jasonscheirer.com/weblog/make-a-chromebook-a-developer-machine/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This is &lt;a href=&#34;https://jason.cleanstick.net/post/155005051345/turn-a-chromebook-into-the-ultimate-golangpython&#34;&gt;a recycled post from my tumblr weblog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ha ha ha just lying the real title should be&lt;/p&gt;
&lt;h1 id=&#34;turning-a-piece-of-shit-chromebook-into-a-good-enough-development-machine-because-youre-unemployed-and-feel-like-an-ass-trying-to-justify-spending-2000-on-a-god-damned-macbook-so-you-wound-up-buying-a-chromebook-instead&#34;&gt;Turning a Piece of Shit Chromebook into a Good Enough Development Machine Because You&amp;rsquo;re Unemployed and Feel Like An Ass Trying to Justify Spending $2000 on a God Damned Macbook so You Wound Up Buying a Chromebook Instead&lt;/h1&gt;
&lt;p&gt;Anyway, I&amp;rsquo;m &lt;a href=&#34;http://www.theverge.com/2016/12/8/13887622/yik-yak-layoffs-growth-collapse&#34;&gt;unemployed because of reasons&lt;/a&gt; and figured there were better things to do with the credit limit on my credit card than spend $2000 on a Macbook, so I bought one of the highest rated Chromebooks at my &amp;ldquo;willing to pay this much&amp;rdquo; price point: &lt;a href=&#34;https://www.asus.com/us/Notebooks/ASUS_Chromebook_Flip_C100PA/&#34;&gt;the Chromebook C100P&lt;/a&gt;. The stats are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Processor: Piece of shit system-on-chip ARM thing&lt;/li&gt;
&lt;li&gt;RAM: Yes&lt;/li&gt;
&lt;li&gt;Screen: Acceptable but you can see the pixels&lt;/li&gt;
&lt;li&gt;Keyboard: Ugh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Considering it&amp;rsquo;s still an order of magnitude better than &lt;a href=&#34;http://www.macworld.com/article/2901437/macbook/ode-to-the-12-inch-powerbook-g4-apples-first-desktop-quality-laptop.html&#34;&gt;the first good laptop I owned&lt;/a&gt;, it&amp;rsquo;s a pretty good buy at $200 and some change.&lt;/p&gt;
&lt;p&gt;So Chrome OS is nice but I want to introduce security holes to the device, so &lt;em&gt;LET&amp;rsquo;S INSTALL PLAIN OLD LINUX&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The first thing to do is follow the instructions to install &lt;a href=&#34;https://github.com/dnschneid/crouton/blob/master/README.md&#34;&gt;crouton via the instructions&lt;/a&gt;. You get the option of what flavor of Linux to install, after 8 hours of experimenting with Debians and Ubuntus I found the one with the best support is Trusty. So do this after downloading crouton in Developer Mode:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sh crouton -r trusty -t xfce,touch,xiwi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ldquo;But I like Unity,&amp;rdquo; you say. I respond with &amp;ldquo;NO YOU DON&amp;rsquo;T IMAGINARY IDIOT NO YOU DON&amp;rsquo;T NOBODY LIKES UNITY UNLESS THEY WORK FOR CANONICAL.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;But that is a very old Ubuntu,&amp;rdquo; you say. Welp, the only big thing that will really matter is you&amp;rsquo;ll have to load up an older &lt;code&gt;.tmux.conf&lt;/code&gt; with the older mouse mode switches because that&amp;rsquo;s all I found was missing. Everything else we will download from third parties.&lt;/p&gt;
&lt;p&gt;Also follow the directions to install the Chrome extension in the host ChromeOS browser, it&amp;rsquo;s helpful.&lt;/p&gt;
&lt;h2 id=&#34;golang&#34;&gt;Golang&lt;/h2&gt;
&lt;p&gt;Luckily the dudes at the Go project are charitable and offer an ARM version of the Golang toolchain. Go get a &lt;code&gt;-armv6l&lt;/code&gt; version of Go &lt;a href=&#34;https://golang.org/dl/&#34;&gt;from the downloads page&lt;/a&gt; and decompress it in your home dir. If you use &lt;code&gt;~/workspace&lt;/code&gt; as your Go home like I do, add this junk to your &lt;code&gt;.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#19177c&#34;&gt;GOROOT&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;~/go
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#19177c&#34;&gt;GOPATH&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;~/workspace
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Okay cool Go is ready to go. That last sentence&amp;rsquo;s wording was not intentional nor was it a joke, get over yourself.&lt;/p&gt;
&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;
&lt;p&gt;Trusty uses an older version of Python. Continuum&amp;rsquo;s got it. &lt;a href=&#34;https://repo.continuum.io/miniconda/&#34;&gt;Get an &lt;code&gt;armv6l&lt;/code&gt; installer of Miniconda&lt;/a&gt; and install it in your home dir. It&amp;rsquo;ll even add itself to your &lt;code&gt;$PATH&lt;/code&gt;. Python&amp;rsquo;s covered.&lt;/p&gt;
&lt;h2 id=&#34;vs-code-the-unlikeliest-ide&#34;&gt;VS Code, the unlikeliest IDE&lt;/h2&gt;
&lt;p&gt;For some inexplicable reason &lt;a href=&#34;http://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; is the best IDE for writing Go. It&amp;rsquo;s an indisputable fact and goes to further prove that we live in a cruel, arbitrary universe that often makes no sense. &lt;a href=&#34;https://code.headmelted.com/&#34;&gt;This headmelted dude has you covered&lt;/a&gt; for builds of VS Code for piece of shit ARM processors. Ignore his instructions, open a terminal in your xfce session and do this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://code.headmelted.com/installers/apt.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sh ./apt.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;now VS Code is installed. You can code in these two arbitrary languages I have chosen as my favorites on this awful hardware, and to be honest it&amp;rsquo;s minimally painful (minus building huge Golang projects).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
